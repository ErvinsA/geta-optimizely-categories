name: TestWorkflow
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    name: Release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Verify commit exists in origin/master
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/master
      - name: Set VERSION variable from tag
        run: |
          $version = ("${{github.ref_name}}").Remove(0, 1)
          echo "VERSION=$version" >> $env:GITHUB_ENV
      - name: Create GitHub Release with Auto-Generated Notes
        run: |
           gh release create ${{ github.ref_name }} --generate-notes
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload asset to release
        run: |
          for %%F in (*.sln) do (
            gh release upload ${{ github.ref_name }} "%%F" --clobberr
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Create GitHub Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{github.ref_name}}
#          release_name: ${{github.ref_name}}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./Geta.Optimizely.Categories.sln
#          asset_name: Geta.Optimizely.Categories.sln
#          asset_content_type: application/zip
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}